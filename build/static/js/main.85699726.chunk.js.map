{"version":3,"sources":["components/ShareFileModal.js","Emitter.js","redux/constants/action-types.js","redux/actions/index.js","components/Calculator.js","components/TreeFile.js","components/TreeFolder.js","components/AddFileModal.js","components/Tree.js","components/ChangesList.js","App.js","SignInPage.js","Main.js","redux/reducers/index.js","redux/store/index.js","serviceWorker.js","index.js","firebase/dbScript.js","firebase/authScript.js","firebase/Firebase.js","firebase/cloudFunctions.js"],"names":["cloudFunctions","require","ShareFileModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","formValidated","showAuthorizingText","showInvalidText","handleSubmit","bind","assertThisInitialized","e","form","currentTarget","checkValidity","preventDefault","stopPropagation","setState","validateEmail","email","btoa","shareemail","value","validObj","data","handleClose","getUIDFromEmail","validUid","handleAddOthers","authorizingInvalid","_this2","react_default","a","createElement","Alert_default","variant","Modal_default","show","onHide","Header","closeButton","Title","filename","Body","Form_default","noValidate","validated","onSubmit","Group","Label","Control","required","placeholder","name","Text","className","id","Button_default","onClick","type","React","Component","EE","UPDATE_OLD_EXPR_STRING","UPDATE_NEW_EXPR_STRING","UPDATE_UID","UPDATE_DISPLAY_TREE_CHECK_MARKS","UPDATE_MY_FILES","UPDATE_OTHER_FILES","updateUid","payload","updateDisplayTreeCheckMarks","updateMyFiles","updateOtherFiles","dbScript","Redux_Calculator","throttledSave","_","throttle","updateNewExprString","exprString","getExprListString","calculator","getState","leading","undefined","showShareFileModal","ownerUid","handleCommit","handleImport","handleOtherFileImport","handleShowShareFileModal","handleCloseShareFileModal","imageUploadCallback","on","fileName","owner","otherUid","linkUserToMyProject","uid","linkUserToProject","projectName","calcState","expressions","list","result","getExprList","i","length","latex","file","cb","window","Desmos","imageFileToDataURL","err","dataURL","uploadImage","then","url","_this3","calcElem","document","getElementById","GraphingCalculator","observeEvent","handleOtherFileCommit","updateOldExprString","updateFile","updateFileFromAnotherUser","content","_this4","importFile","alert","importFileFromAnotherUser","filenameTag","components_ShareFileModal","Fragment","Calculator","connect","dispatch","Redux_TreeFile","checked","handleClick","handleCheckClick","displayTreeCheckMarks","isMyFiles","emit","iconOrCheck","md_index_esm","index_esm","TreeFile","uuidv4","Redux_TreeFolder","open","insideContent","myFiles","push","components_TreeFile","key","otherFiles","keys","forEach","userKey","fileKey","aria-controls","aria-expanded","displayCaret","Collapse_default","in","TreeFolder","AddFileModal","handleAddFile","Redux_Tree","showAddFileModal","handleShowAddFileModal","handleCloseAddFileModal","handleEditButton","handleDeleteButton","addFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","stop","_x2","apply","arguments","getFileNames","vals","getOtherFileNames","updateFiles","editOrDoneButton","addOrDeleteButton","showDoneButton","components_AddFileModal","components_TreeFolder","displayCheckMarks","Tree","Diff","Redux_ChangesList","oldText","newText","getDiff","part","textColor","added","removed","split","subpart","diffLines","createColoredText","ChangesList","oldExprString","newExprString","authScript","Redux_App","handleSignOut","signout","Navbar_default","bg","Brand","href","Nav_default","Link","components_ChangesList","components_Calculator","components_Tree","App","Redux_SignInPage","handleSignIn","signin","user","getMyFileNames","vals2","src","alt","SignInPage","Redux_Main","src_App","src_SignInPage","Main","initialState","rootReducer","action","assign","store","createStore","Boolean","location","hostname","match","ReactDOM","render","es","src_Main","navigator","serviceWorker","ready","registration","unregister","_uid","firebase","ref","update","Promise","resolve","reject","once","val","child","myUid","exists","_home_sanketh_Documents_GitHub_desmos_live_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","sample-data","addUserToList","console","log","ownerUID","otherUID","provider","GoogleAuthProvider","signInWithPopup","_home_sanketh_Documents_GitHub_desmos_live_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_sanketh_Documents_GitHub_desmos_live_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","abrupt","_x","catch","error","errorMessage","message","signOut","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","__webpack_require__","d","__webpack_exports__","getEmailFromUID","validateUID","functions","httpsCallable"],"mappings":"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","file":"static/js/main.85699726.chunk.js","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport './css/AddFileModal.css';\nimport Alert from 'react-bootstrap/Alert';\n\nconst cloudFunctions = require('../firebase/cloudFunctions.js');\n\nclass ShareFileModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {formValidated: false, showAuthorizingText: false, showInvalidText: false};\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleSubmit(e) { // TODO: add ability to view/delete shared people\n        const form = e.currentTarget;\n        \n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            e.preventDefault();\n            this.setState({showAuthorizingText: true});\n            let validObj = await cloudFunctions.validateEmail({email: btoa(form.shareemail.value) });\n            let emailValid = validObj.data;\n            if (emailValid) {\n                this.setState({formValidated: true, showAuthorizingText: false, showInvalidText: false});\n                this.props.handleClose();\n                let validUid = await cloudFunctions.getUIDFromEmail({email: btoa(form.shareemail.value)});\n                this.props.handleAddOthers(validUid.data);\n            } else {\n                this.setState({showInvalidText: true, showAuthorizingText: false});\n                // alert(\"The user with the email you provided is invalid.\");\n            }\n        }\n    }\n\n    render() {\n        let authorizingInvalid;\n        if (this.state.showAuthorizingText) {\n            authorizingInvalid = <Alert variant=\"primary\">Authorizing....</Alert>;\n        } else if (this.state.showInvalidText) {\n            authorizingInvalid = <Alert variant=\"danger\">Invalid email!</Alert>;\n        } else {\n            authorizingInvalid = <div></div>;\n        }\n        return (\n            <div>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{\"Share \\\"\" + this.props.filename + \"\\\"\"}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    <Form noValidate validated={this.state.formValidated} onSubmit={e => this.handleSubmit(e)}>\n                        <Form.Group>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control required placeholder=\"Enter Email Address\" name=\"shareemail\" />\n                            <Form.Text className=\"text-muted\">\n                                Enter the email address of the user you want to share this project with.\n                            </Form.Text>\n                        </Form.Group>\n                        {authorizingInvalid}\n                        <div id=\"modal-submit-bar\">\n                            <div className=\"modal-submit-bar-btn\">\n                                <Button variant=\"secondary\" onClick={this.props.handleClose}>\n                                    Cancel\n                                </Button>\n                            </div>\n                            <div className=\"modal-submit-bar-btn\">\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ShareFileModal;","const EventEmitter = require('events');\n\nconst EE = new EventEmitter();\n\nexport default EE;","export const UPDATE_OLD_EXPR_STRING = \"UPDATE_OLD_EXPR_STRING\";\nexport const UPDATE_NEW_EXPR_STRING = \"UPDATE_NEW_EXPR_STRING\";\nexport const UPDATE_UID = \"UPDATE_UID\";\nexport const UPDATE_DISPLAY_TREE_CHECK_MARKS = \"UPDATE_DISPLAY_TREE_CHECK_MARKS\";\nexport const UPDATE_MY_FILES = \"UPDATE_MY_FILES\";\nexport const UPDATE_OTHER_FILES = \"UPDATE_OTHER_FILES\";","import { UPDATE_OLD_EXPR_STRING, UPDATE_NEW_EXPR_STRING, UPDATE_UID, UPDATE_DISPLAY_TREE_CHECK_MARKS, UPDATE_MY_FILES, UPDATE_OTHER_FILES } from '../constants/action-types';\n\nexport function updateOldExprString(payload) {\n    return { type: UPDATE_OLD_EXPR_STRING, payload }\n}\n\nexport function updateNewExprString(payload) {\n    return { type: UPDATE_NEW_EXPR_STRING, payload }\n}\n\nexport function updateUid(payload) {\n    return { type: UPDATE_UID, payload};\n}\n\nexport function updateDisplayTreeCheckMarks() {\n    return { type: UPDATE_DISPLAY_TREE_CHECK_MARKS };\n}\n\nexport function updateMyFiles(payload) {\n    return { type: UPDATE_MY_FILES, payload };\n}\n\nexport function updateOtherFiles(payload) {\n    return { type: UPDATE_OTHER_FILES, payload };\n}","import React from 'react';\nimport _ from 'underscore';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport ShareFileModal from './ShareFileModal';\nimport { connect } from 'react-redux';\n\nimport './css/Calculator.css';\n\nimport EE from '../Emitter';\n\nimport { updateOldExprString, updateNewExprString } from '../redux/actions/index';\n\nconst dbScript = require('../firebase/dbScript.js');\nconst cloudFunctions = require('../firebase/cloudFunctions.js');\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateOldExprString: exprString => dispatch(updateOldExprString(exprString)),\n        updateNewExprString: exprString => dispatch(updateNewExprString(exprString))\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    };\n};\n\nclass Redux_Calculator extends React.Component { \n    constructor(props) {\n        super(props);\n\n        this.state = {filename: undefined, showShareFileModal: false, ownerUid: \"\"};\n\n        this.handleCommit = this.handleCommit.bind(this); // make 'this' accessible in call-back\n        this.handleImport = this.handleImport.bind(this);\n        this.handleOtherFileImport = this.handleOtherFileImport.bind(this);\n        this.handleAddOthers = this.handleAddOthers.bind(this);\n        this.handleShowShareFileModal = this.handleShowShareFileModal.bind(this);\n        this.handleCloseShareFileModal = this.handleCloseShareFileModal.bind(this);\n        this.imageUploadCallback = this.imageUploadCallback.bind(this);\n\n        EE.on(\"file-open-mine\", (fileName) =>{\n            this.setState({filename: fileName}, () => {\n                this.setState({ownerUid: \"\"}, () => {\n                    this.handleImport();\n                });\n                //this.handleOtherFileImport(\"t9lnmszg8oYPNOL3ifX7TLf7I3J2\");\n            });\n        });\n\n        EE.on(\"file-open-other\", (data) => {\n            this.setState({filename: data.name}, () => {\n                this.setState({ownerUid: data.owner}, () => {\n                    this.handleOtherFileImport();\n                });\n            });\n        });\n    }\n\n    async handleAddOthers(otherUid) {\n        if (typeof this.state.filename != \"undefined\") {\n            await dbScript.linkUserToMyProject(this.props.uid, this.state.filename, otherUid); // adds user under current project data\n            cloudFunctions.linkUserToProject({ownerUid: otherUid, projectName: this.state.filename}) // adds project under other user\n        }\n    }\n\n    handleShowShareFileModal() {\n        this.setState({showShareFileModal: true});\n    }\n\n    handleCloseShareFileModal() {\n        this.setState({showShareFileModal: false});\n    }\n\n    getState() {\n        return this.calculator.getState();\n    }\n\n    getExprList(calcState) {\n        return calcState.expressions.list;\n    }\n\n    getExprListString(calcState) {\n        let result = \"\";\n        let list = this.getExprList(calcState);\n        \n        for (let i = 0; i < list.length; i++) {\n            result += list[i].latex + \"\\n\"; \n        }\n\n        return result;\n    }\n\n    imageUploadCallback(file, cb) {\n        window.Desmos.imageFileToDataURL(file, (err, dataURL) => {\n            if (err) {\n                cb(err);\n                return;\n            } // TODO: delete the image when the image expression is deleted\n            cloudFunctions.uploadImage({dataURL: dataURL, uid: this.props.uid, fileName: this.state.filename}).then(\n            (result) => {\n                if (!result.data) {\n                    cb(true);\n                    return;\n                }\n                cb(null, result.data.url);\n            }\n            );\n        });\n    }\n\n    throttledSave = _.throttle(\n        () => {\n            // this.props.updateLocalCalcState(this.calculator.getState());\n            this.props.updateNewExprString({exprString: this.getExprListString(this.calculator.getState())});\n        },\n        1000,\n        {leading: false}\n    );\n\n    componentDidMount() {\n        let calcElem = document.getElementById(\"calculator\");\n        this.calculator = window.Desmos.GraphingCalculator(calcElem, { imageUploadCallback: this.imageUploadCallback });\n\n        this.calculator.observeEvent('change', () => {\n            this.throttledSave();\n        });\n    }\n\n    handleCommit() {\n        if (this.state.filename) {\n            if (this.state.ownerUid !== \"\") {\n                this.handleOtherFileCommit();\n                this.props.updateOldExprString({exprString: this.getExprListString(this.getState())});\n                return;\n            }\n            dbScript.updateFile(this.props.uid, this.state.filename, this.getState());\n            this.props.updateOldExprString({exprString: this.getExprListString(this.getState())});\n        }\n    }\n\n    handleOtherFileCommit() {\n        cloudFunctions.updateFileFromAnotherUser({ownerUid: this.state.ownerUid, fileName: this.state.filename, content: this.getState()});\n    }\n\n    handleImport() {\n        if (this.state.ownerUid !== \"\") {\n            this.handleOtherFileImport();\n            return;\n        }\n        if (this.props.uid === undefined) {\n            alert(\"Sign-in first!\");\n            return;\n        }\n        if (!this.state.filename) {\n            return;\n        }\n        dbScript.importFile(this.props.uid, this.state.filename).then(content => {\n            this.calculator.setState(content);\n\n            // this.props.handleImportData(this.getState());\n            this.props.updateOldExprString({exprString: this.getExprListString(this.getState())});\n        });\n    }\n\n    async handleOtherFileImport() {\n        if (this.props.uid === undefined) {\n            alert(\"Sign-in first!\");\n            return;\n        }\n        if (!this.state.filename) {\n            return;\n        }\n        let content = await cloudFunctions.importFileFromAnotherUser({ownerUid: this.state.ownerUid, fileName: this.state.filename});\n        this.calculator.setState(content.data);\n        this.props.updateOldExprString({exprString: this.getExprListString(this.getState())});\n    }\n\n    render() {\n        let filenameTag;\n        if (this.state.filename) {\n            filenameTag = <Alert variant=\"success\">Current File: <strong>{this.state.filename}</strong></Alert>\n        } else {\n            filenameTag = <Alert variant=\"danger\"><strong>No File Selected</strong></Alert>\n        }\n        \n        return (\n            <div id=\"calc-grid\">\n                <div id=\"current-file-shower\">\n                    {filenameTag}\n                </div>\n                <div id=\"calculator\"></div>\n                <ShareFileModal show={this.state.showShareFileModal} handleClose={this.handleCloseShareFileModal} handleAddOthers={this.handleAddOthers} filename={this.state.filename} />\n                <div id=\"calc-buttons\">\n                    {this.state.filename &&\n                    <> \n                    <div>\n                        <Button variant=\"success\" className=\"calc-btn\" onClick={this.handleCommit}>\n                            Commit Changes\n                        </Button>\n                        <Button variant=\"primary\" className=\"calc-btn\" onClick={this.handleImport}>\n                            Import Again\n                        </Button>\n                    </div>\n                    <div id=\"add-ppl-btn-container\">\n                        <Button variant=\"info\" className=\"calc-btn\" onClick={this.handleShowShareFileModal}>\n                            Allow Others to Edit\n                        </Button>\n                    </div>\n                    </>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Calculator = connect(mapStateToProps, mapDispatchToProps)(Redux_Calculator);\n\nexport default Calculator;","import React from 'react';\nimport './css/TreeFile.css';\n\nimport { FaFile } from 'react-icons/fa';\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md';\n\nimport EE from '../Emitter';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        displayTreeCheckMarks: state.displayTreeCheckMarks\n    };\n};\n\nclass Redux_TreeFile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {checked: false};\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleCheckClick = this.handleCheckClick.bind(this);\n    }\n\n    handleClick() {\n        if (!this.props.displayTreeCheckMarks) {\n            if (this.props.isMyFiles) {\n                EE.emit(\"file-open-mine\", this.props.name);\n            } else {\n                EE.emit(\"file-open-other\", {name: this.props.name, owner: this.props.ownerUid});\n            }\n        }\n    }\n\n    handleCheckClick() {\n        this.setState({checked: !this.state.checked});\n    }\n    \n    render() {\n        let iconOrCheck;\n        if (this.props.displayTreeCheckMarks) {\n            if (this.state.checked) {\n                iconOrCheck = <MdCheckBox />; // TODO: add hover properties to it and add check change (outline to check)\n            } else {\n                iconOrCheck = <MdCheckBoxOutlineBlank />;\n            }\n        } else {\n            iconOrCheck = <FaFile />;\n        }\n        return (\n            <div>\n                <div className=\"file-node\" onClick={this.handleClick}>\n                    <div className=\"project-icon-container\" onClick={this.handleCheckClick}>\n                        {iconOrCheck}\n                    </div>\n                    {this.props.name}\n                </div>\n            </div>\n        ); \n    }\n    \n}\n\nconst TreeFile = connect(mapStateToProps)(Redux_TreeFile);\n\nexport default TreeFile; ","import React from 'react';\nimport './css/TreeFolder.css';\n\nimport { FaCaretRight, FaCaretDown } from 'react-icons/fa';\n\nimport Collapse from 'react-bootstrap/Collapse';\nimport Alert from 'react-bootstrap/Alert';\nimport TreeFile from './TreeFile.js';\n\nimport { connect } from 'react-redux';\n\nconst uuidv4 = require('uuid/v4');\n\nconst mapStateToProps = state => {\n    return {\n        myFiles: state.myFiles,\n        otherFiles: state.otherFiles\n    };\n};\n\nclass Redux_TreeFolder extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {open: false};\n    }\n\n    displayCaret() {\n        if (this.state.open) {\n            return (\n                <div className=\"caret-icon-container\">\n                    <FaCaretDown />\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"caret-icon-container\">\n                    <FaCaretRight />\n                </div>\n            );        \n        }\n    }\n\n    render() {\n        let insideContent;\n        if (this.props.isMyFiles) {\n            if (!this.props.myFiles.length) {\n                insideContent = <Alert variant=\"primary\">No files!</Alert>;\n            } else {\n                insideContent = [];\n                for (let i = 0; i < this.props.myFiles.length; i++) {\n                    insideContent.push(\n                        <TreeFile key={uuidv4()} name={this.props.myFiles[i]} isMyFiles={true} ownerUid={\"\"} />\n                    );\n                }\n            }\n        } else {\n            insideContent = [];\n            if (!this.props.otherFiles.length) {\n                insideContent = <Alert variant=\"primary\">No files!</Alert>;\n            } else {\n                Object.keys(this.props.otherFiles).forEach(userKey => {\n                    Object.keys(this.props.otherFiles[userKey]).forEach(fileKey => {\n                        insideContent.push(\n                            <TreeFile key={uuidv4()} name={fileKey} isMyFiles={false} ownerUid={userKey} />\n                        );\n                    });\n                });\n            }\n        }\n       \n        \n        return (\n            <div>\n                <div\n                    className=\"folder-node\"\n                    onClick={() => this.setState({ open: !this.state.open })}\n                    aria-controls=\"collapse-div\"\n                    aria-expanded={this.state.open}\n                >\n                    {this.displayCaret()}\n                    {this.props.name}\n                </div>\n                <Collapse in={this.state.open}>\n                    <div id=\"collapse-div\" className=\"indented\">\n                        {insideContent}\n                    </div>\n                </Collapse>\n            </div>\n        );  \n    }\n}\n\nconst TreeFolder = connect(mapStateToProps)(Redux_TreeFolder);\n\nexport default TreeFolder;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nimport './css/AddFileModal.css';\n\nclass AddFileModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {formValidated: false};\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            e.preventDefault();\n            this.props.handleAddFile(form.projectName.value);\n        }\n        this.setState({validated: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add File</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    <Form noValidate validated={this.state.formValidated} onSubmit={e => this.handleSubmit(e)}>\n                        <h2>If you are not the owner:</h2>\n                        <Form.Group>\n                            <Form.Label>Owner Email and Project Name</Form.Label>\n                            <Form.Control placeholder=\"Enter Owner Email\" name=\"otherowneremail\" />\n                            <Form.Control placeholder=\"Enter Project Name\" name=\"otherownerprojectname\" />\n                            <Form.Text className=\"text-muted\">\n                                Enter this information if you are not the owner.\n                            </Form.Text>\n                        </Form.Group>\n                        <h2>If you are the owner:</h2>\n                        <Form.Group>\n                            <Form.Label>Project Name</Form.Label>\n                            <Form.Control placeholder=\"Enter Project Name\" name=\"projectName\" />\n                            <Form.Text className=\"text-muted\">\n                                Enter the project name.\n                            </Form.Text>\n                        </Form.Group>\n                        <div id=\"modal-submit-bar\">\n                            <div className=\"modal-submit-bar-btn\">\n                                <Button variant=\"secondary\" onClick={this.props.handleClose}>\n                                    Cancel\n                                </Button>\n                            </div>\n                            <div className=\"modal-submit-bar-btn\">\n                                <Button variant=\"primary\" type=\"submit\" onClick={this.props.handleClose}>\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default AddFileModal;\n","import React from 'react';\nimport TreeFolder from './TreeFolder';\nimport Button from 'react-bootstrap/Button';\nimport AddFileModal from './AddFileModal';\n\nimport { connect } from 'react-redux';\nimport { updateDisplayTreeCheckMarks, updateMyFiles, updateOtherFiles } from '../redux/actions/index';\n\n\nimport './css/Tree.css';\n\nconst dbScript = require('../firebase/dbScript.js');\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid,\n        showDoneButton: state.displayTreeCheckMarks\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateDisplayTreeCheckMarks: () => dispatch(updateDisplayTreeCheckMarks()),\n        updateMyFiles: list => dispatch(updateMyFiles(list)),\n        updateOtherFiles: list => dispatch(updateOtherFiles(list))\n    };\n};\n\nclass Redux_Tree extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {showAddFileModal: false};\n\n        this.handleAddFile = this.handleAddFile.bind(this);\n        this.handleShowAddFileModal = this.handleShowAddFileModal.bind(this);\n        this.handleCloseAddFileModal = this.handleCloseAddFileModal.bind(this);\n        this.handleEditButton = this.handleEditButton.bind(this);\n        this.handleDeleteButton = this.handleDeleteButton.bind(this);\n    }\n\n    handleDeleteButton() {\n        \n    }\n\n    handleShowAddFileModal() {\n        this.setState({showAddFileModal: true});\n    }\n\n    handleCloseAddFileModal() {\n        this.setState({showAddFileModal: false});\n    }\n\n    async handleAddFile(filename) {\n        await dbScript.addFile(this.props.uid, filename).then(async response => {\n            if (response === -1) { // already exists\n                alert(\"File already exists!\");\n            }\n\n            await this.updateMyFiles();\n        });\n    }\n\n    async updateMyFiles() {\n        let vals = await dbScript.getFileNames(this.props.uid);\n        this.props.updateMyFiles({list: vals});\n    }\n\n    async updateOtherFiles() {\n        let data = await dbScript.getOtherFileNames(this.props.uid);\n        this.props.updateOtherFiles({list: data});\n    }\n\n    async handleEditButton() {\n        this.props.updateDisplayTreeCheckMarks();\n        await this.updateFiles();\n    }\n\n    render() {\n        let editOrDoneButton;\n        if (this.props.showDoneButton) {\n            editOrDoneButton = <Button variant=\"outline-success\" onClick={this.handleEditButton}>Done</Button>\n        } else {\n            editOrDoneButton = <Button variant=\"outline-danger\" id=\"tree-edit\" onClick={this.handleEditButton}>Edit</Button>\n        }\n\n        let addOrDeleteButton;\n        if (this.props.showDoneButton) {\n            addOrDeleteButton = <Button variant=\"danger\" onClick={this.handleDeleteButton}>Delete</Button>\n        } else {\n            addOrDeleteButton = <Button variant=\"success\" id=\"tree-add\" onClick={this.handleShowAddFileModal}>Add</Button>;\n        }\n\n        return (\n            <div id=\"tree-container\">\n                <div id=\"tree-title\">\n                    <h3>Projects</h3>\n                </div>\n                <AddFileModal show={this.state.showAddFileModal} handleClose={this.handleCloseAddFileModal} handleAddFile={this.handleAddFile}/>\n                <div id=\"tree-toolbar\">\n                    {addOrDeleteButton}\n                    {editOrDoneButton}\n                </div>\n                <div id=\"tree-list\">\n                    <TreeFolder name=\"Owner: Me\" isMyFiles={true} displayCheckMarks={this.state.displayCheckMarks} />\n                    <TreeFolder name=\"Owner: Others\" isMyFiles={false} displayCheckMarks={this.state.displayCheckMarks} />\n                </div>\n            </div>\n        ); \n    }\n}\n\nconst Tree = connect(mapStateToProps, mapDispatchToProps)(Redux_Tree);\n\nexport default Tree;","import React from 'react';\nimport { connect } from 'react-redux';\nimport './css/ChangesList.css';\n\nconst Diff = require('diff');\nconst uuidv4 = require('uuid/v4');\n\nconst mapStatesToProps = state => {\n    return { oldText: state.oldExprString, newText: state.newExprString };\n};\n\nclass Redux_ChangesList extends React.Component {\n\n    createColoredText(oldText, newText) {\n        let result = [];\n\n        let diff = this.getDiff(oldText, newText);\n        diff.forEach((part) => {\n            let textColor = part.added ? 'added' : part.removed ? 'removed' : 'same';\n            let eachLine = part.value.split(\"\\n\");\n            eachLine.forEach((subpart) => {\n                if (subpart !== \"undefined\" && subpart !== \"\") {\n                    result.push(\n                        <div key={uuidv4()} className={\"changes-item \"+textColor}>\n                            {subpart}\n                        </div>\n                    );\n                }\n            });\n        });\n\n        return result;\n    }\n\n    getDiff(oldText, newText) {\n        return Diff.diffLines(oldText, newText);\n    }\n\n    render() {\n        return (\n            <div id=\"changes-container\">\n                <div id=\"changes-title\">\n                    Changes Made\n                </div>\n\n                <div id=\"changes-list\">\n                    {this.createColoredText(this.props.oldText, this.props.newText)}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst ChangesList = connect(mapStatesToProps)(Redux_ChangesList);\n\nexport default ChangesList;","import React from 'react';\n\nimport Calculator from './components/Calculator';\nimport Tree from './components/Tree';\nimport ChangesList from './components/ChangesList';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport Button from 'react-bootstrap/Button';\n\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { updateUid, updateDisplayTreeCheckMarks, updateMyFiles, updateOtherFiles } from './redux/actions/index';\n\nconst authScript = require('./firebase/authScript.js');\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateUid: uid => dispatch(updateUid(uid)),\n        updateDisplayTreeCheckMarks: () => dispatch(updateDisplayTreeCheckMarks()),\n        updateMyFiles: list => dispatch(updateMyFiles(list)),\n        updateOtherFiles: list =>  dispatch(updateOtherFiles(list))\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    };\n};\n\nclass Redux_App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        //this.handleSignIn = this.handleSignIn.bind(this);\n        this.handleSignOut = this.handleSignOut.bind(this);\n    }\n    /*\n    async handleSignIn() {\n        let user = await authScript.signin();\n        this.props.updateUid({uid: user.uid});\n        let vals = await dbScript.getMyFileNames(user.uid);\n        this.props.updateMyFiles({list: vals});\n        let vals2 = await dbScript.getOtherFileNames(user.uid);\n        this.props.updateOtherFiles({list: vals2});\n    }*/\n\n    async handleSignOut() {\n        await authScript.signout();\n        this.props.updateUid({uid: undefined});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand href=\"#home\">Desmos Live!</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#home\">Editor</Nav.Link>\n                        <Nav.Link href=\"#about\">About</Nav.Link>\n                    </Nav>\n                    <Button variant=\"primary\" onClick={this.handleSignOut}>\n                        Sign Out\n                    </Button>\n                </Navbar>\n                <div className=\"grid-container\">\n                    <div className=\"changes\">\n                        <ChangesList />\n                    </div>\n                    <div className=\"editor\">\n                        <Calculator />\n                    </div>\n                    <div className=\"tree\">\n                        <Tree />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Redux_App);\n\nexport default App;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateUid, updateMyFiles, updateOtherFiles } from './redux/actions/index';\n\nimport './SignInPage.css';\n\nconst authScript = require('./firebase/authScript.js');\nconst dbScript = require('./firebase/dbScript.js');\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateUid: uid => dispatch(updateUid(uid)),\n        updateMyFiles: list => dispatch(updateMyFiles(list)),\n        updateOtherFiles: list =>  dispatch(updateOtherFiles(list))\n    };\n};\n\nclass Redux_SignInPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSignIn = this.handleSignIn.bind(this);\n    }\n\n    async handleSignIn() {\n        let user = await authScript.signin();\n        this.props.updateUid({uid: user.uid});\n        let vals = await dbScript.getMyFileNames(user.uid);\n        this.props.updateMyFiles({list: vals});\n        let vals2 = await dbScript.getOtherFileNames(user.uid);\n        this.props.updateOtherFiles({list: vals2});\n    }\n\n    render() {\n        return (\n            <div id=\"sign-in-background\">\n                <div className=\"sign-in-grid-container\">\n\n                    <div className=\"sign-in-box\">\n                        <div id=\"sign-in-container\">\n                            <div id=\"sign-in-main-text\">\n                                Sign In\n                            </div> \n                            <div className=\"g-sign-in-button\" onClick={this.handleSignIn}>\n                                <div className=\"content-wrapper\">\n                                    <div className=\"logo-wrapper\">\n                                        <img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"google logo\" />\n                                    </div>\n                                    <span className=\"text-container\">\n                                        <span>Sign in with Google</span>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"show-off-image-box\"></div>\n                    <div className=\"header-box\">\n                        Desmos Live\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nconst SignInPage = connect(null, mapDispatchToProps)(Redux_SignInPage);\n\nexport default SignInPage;","import React from 'react';\nimport App from './App';\nimport SignInPage from './SignInPage';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    };\n};\n\nclass Redux_Main extends React.Component {\n\n    render() {\n        return (\n            <>\n            { \n                this.props.uid && \n                <App />\n            }\n            {\n                !this.props.uid &&\n                <SignInPage />\n            }\n            </>\n        );\n    }\n}\n\nconst Main = connect(mapStateToProps)(Redux_Main);\n\nexport default Main;","import { UPDATE_OLD_EXPR_STRING, UPDATE_NEW_EXPR_STRING, UPDATE_UID, UPDATE_DISPLAY_TREE_CHECK_MARKS, UPDATE_MY_FILES, UPDATE_OTHER_FILES } from '../constants/action-types';\n\nconst initialState = {\n    oldExprString: \"\",\n    newExprString: \"\",\n    uid: undefined,\n    displayTreeCheckMarks: false,\n    myFiles: [],\n    otherFiles: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === UPDATE_OLD_EXPR_STRING) {\n        return Object.assign({}, state, {\n            oldExprString: action.payload.exprString\n        });\n    }\n    if (action.type === UPDATE_NEW_EXPR_STRING) {\n        return Object.assign({}, state, {\n            newExprString: action.payload.exprString\n        });\n    }\n    if (action.type === UPDATE_UID) {\n        return Object.assign({}, state, {\n            uid: action.payload.uid\n        });\n    }\n    if (action.type === UPDATE_DISPLAY_TREE_CHECK_MARKS) {\n        return Object.assign({}, state, {\n            displayTreeCheckMarks: !state.displayTreeCheckMarks // TODO: make it so it doesn't flip but set (in case flipping goes wrong/doesn't happen)\n        });\n    }\n    if (action.type === UPDATE_MY_FILES) {\n        return Object.assign({}, state, {\n            myFiles: action.payload.list\n        });\n    }\n    if (action.type === UPDATE_OTHER_FILES) {\n        return Object.assign({}, state, {\n            otherFiles: action.payload.list\n        }); \n    }\n    return state;\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Main from './Main';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/index\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Main />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//import firebase from './Firebase.js';\n\nimport * as firebase from 'firebase/app';\n\nimport 'firebase/database';\n\nexport function updateFile(_uid, fileName, content) {\n    //let _uid = \"t9lnmszg8oYPNOL3ifX7TLf7I3J2\";\n    firebase.database().ref('users/'+_uid+'/files/'+fileName).update({\n        data: content\n    });\n}\n\nexport function importFile(_uid, fileName) {\n    return new Promise((resolve, reject) => {\n        //let _uid = \"t9lnmszg8oYPNOL3ifX7TLf7I3J2\";\n        firebase.database().ref('users/'+_uid+'/files/'+fileName+'/data/').once('value', (data) => {\n            resolve(data.val());\n        })\n    });\n}\n\nexport function getMyFileNames(uid) {\n    return new Promise((resolve, reject) => {\n        firebase.database().ref('users/'+uid+'/files/').once('value', (data) => {\n            let vals = [];\n            data.forEach(child => {\n                vals.push(child.key);\n            }); \n            resolve(vals);\n        });\n    }); \n}\n\nexport function getOtherFileNames(myUid) {\n    return new Promise((resolve, reject) => {\n        firebase.database().ref('users/'+myUid+'/linkedTo/').once('value', (data) => {\n            if (data.exists()) {\n                resolve(data.val());\n            } else {\n                resolve({});\n            }\n        });\n    });\n}\n\nexport function addFile(uid, filename) {\n    return new Promise((resolve, reject) => {\n        firebase.database().ref('users/'+uid+'/files/'+filename).once('value', data => {\n            if (data.exists()) {\n                resolve(-1);\n            } else {\n                firebase.database().ref('users/'+uid+'/files/').update({ [filename]: {\"sample-data\": 0} });\n                resolve(0);\n            }\n        });\n    });\n}\n\nexport function addUserToList(uid, email) {\n    return new Promise((resolve, reject) => {\n        firebase.database().ref('usersToEmail/').update({\n            [uid]: btoa(email)\n        }, () => {\n            firebase.database().ref('emailsToUser/').update({\n                [btoa(email)]: uid\n            }, () => {\n                console.log(\"done adding\");\n                resolve(0);\n            });\n        });\n    });\n}\n\nexport function linkUserToMyProject(ownerUID, projectName, otherUID) {\n    console.log(\"going to the mines lol xd\");\n    return new Promise((resolve, reject) => {\n        firebase.database().ref('users/'+ownerUID+'/files/'+projectName+'/linked/').update({\n            [otherUID]: true\n        });\n        console.log(\"donezo\");\n        resolve(true);\n    });\n}\n","//import firebase from './Firebase.js';\n\nimport * as firebase from 'firebase/app';\n\nimport 'firebase/auth';\nconst dbScript = require('./dbScript.js');\n\nlet provider = new firebase.auth.GoogleAuthProvider();\n//firebase.auth().languageCode = 'pt'; // put in local language\n\nexport function signin() {\n    return firebase.auth().signInWithPopup(provider).then(async (result) => {\n        // let token = result.credential.accessToken; // to access Google API\n        let user = result.user;\n        await dbScript.addUserToList(user.uid, user.email);\n        return user;\n    }).catch(error => {\n        // let errorCode = error.code;\n        let errorMessage = error.message;\n        // let email = error.email; // email of user's account\n        // let credential = error.credential; // firebase.auth.AuthCredential type used\n\n        console.error(errorMessage);\n\n        // TODO: add error handling (say that there was an error, display error code, etc)\n    });\n}\n\nexport function signout() {\n    return firebase.auth().signOut().then(() => {\n        return true;\n    }).catch(error => {\n        return false;\n    });\n}","import * as firebase from 'firebase/app';\n\nlet config = {\n    apiKey: \"AIzaSyDnB54sj_MLG4SXdTImb_ggkwXdLdpPUlo\",\n    authDomain: \"desmos-live-23326.firebaseapp.com\",\n    databaseURL: \"https://desmos-live-23326.firebaseio.com\",\n    projectId: \"desmos-live-23326\",\n    storageBucket: \"\",\n    messagingSenderId: \"39438561393\",\n    appId: \"1:39438561393:web:6c4c80b7eba664e8\"\n};\nfirebase.initializeApp(config);\n\nexport default !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();","import firebase from './Firebase.js';\n\n// import * as firebase from 'firebase';\n\nimport 'firebase/functions';\n\nlet functions = firebase.functions();\n\nexport let getUIDFromEmail = functions.httpsCallable('getUIDFromEmail');\n\nexport let getEmailFromUID = functions.httpsCallable('getEmailFromUID');\n\nexport let validateUID = functions.httpsCallable('validateUID');\n\nexport let validateEmail = functions.httpsCallable('validateEmail');\n\nexport let uploadImage = functions.httpsCallable('uploadImage');\n\nexport let linkUserToProject = functions.httpsCallable('linkUserToProject');\n\nexport let importFileFromAnotherUser = functions.httpsCallable('importFileFromAnotherUser');\n\nexport let updateFileFromAnotherUser = functions.httpsCallable('updateFileFromAnotherUser');"],"sourceRoot":""}